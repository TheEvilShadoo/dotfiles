//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32139144
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_75, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan
.const .align 8 .b8 __internal_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.global .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.entry DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3
)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<126>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<150>;
	.reg .f64 	%fd<531>;
	.reg .b64 	%rd<131>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd45, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1];
	ld.param.u64 	%rd46, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2];
	ld.param.u64 	%rd47, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3];
	mov.u32 	%r40, %ctaid.x;
	mov.u32 	%r41, %ntid.x;
	mov.u32 	%r42, %tid.x;
	mov.b32 	%r43, %envreg3;
	add.s32 	%r44, %r42, %r43;
	mad.lo.s32 	%r45, %r41, %r40, %r44;
	cvt.s64.s32 	%rd1, %r45;
	setp.gt.s32 	%p1, %r45, 4;
	mul.wide.s32 	%rd48, %r45, 8;
	add.s64 	%rd2, %rd47, %rd48;
	mov.f64 	%fd506, 0d7FFFFFFFE0000000;
	mov.f64 	%fd505, %fd506;
	@%p1 bra 	$L__BB0_2;

	ld.global.f64 	%fd505, [%rd2];

$L__BB0_2:
	cvt.u32.u64 	%r46, %rd1;
	setp.gt.s32 	%p2, %r46, 4;
	@%p2 bra 	$L__BB0_4;

	ld.global.f64 	%fd506, [%rd2];

$L__BB0_4:
	abs.f64 	%fd92, %fd506;
	setp.gtu.f64 	%p3, %fd92, 0d7FF0000000000000;
	or.pred  	%p5, %p2, %p3;
	selp.f64 	%fd5, 0d0000000000000000, %fd505, %p5;
	abs.f64 	%fd6, %fd5;
	setp.leu.f64 	%p6, %fd6, 0d3FF0000000000000;
	mov.f64 	%fd507, %fd6;
	@%p6 bra 	$L__BB0_6;

	rcp.approx.ftz.f64 	%fd93, %fd6;
	neg.f64 	%fd94, %fd6;
	mov.f64 	%fd95, 0d3FF0000000000000;
	fma.rn.f64 	%fd96, %fd94, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd96, %fd96, %fd96;
	fma.rn.f64 	%fd98, %fd97, %fd93, %fd93;
	setp.eq.f64 	%p7, %fd6, 0d7FF0000000000000;
	selp.f64 	%fd507, 0d0000000000000000, %fd98, %p7;

$L__BB0_6:
	mul.f64 	%fd100, %fd507, %fd507;
	mov.f64 	%fd101, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd102, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd103, %fd102, %fd100, %fd101;
	mov.f64 	%fd104, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd105, %fd103, %fd100, %fd104;
	mov.f64 	%fd106, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd107, %fd105, %fd100, %fd106;
	mov.f64 	%fd108, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd109, %fd107, %fd100, %fd108;
	mov.f64 	%fd110, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd111, %fd109, %fd100, %fd110;
	mov.f64 	%fd112, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd113, %fd111, %fd100, %fd112;
	mov.f64 	%fd114, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd115, %fd113, %fd100, %fd114;
	mov.f64 	%fd116, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd117, %fd115, %fd100, %fd116;
	mov.f64 	%fd118, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd119, %fd117, %fd100, %fd118;
	mov.f64 	%fd120, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd121, %fd119, %fd100, %fd120;
	mov.f64 	%fd122, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd123, %fd121, %fd100, %fd122;
	mov.f64 	%fd124, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd125, %fd123, %fd100, %fd124;
	mov.f64 	%fd126, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd127, %fd125, %fd100, %fd126;
	mov.f64 	%fd128, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd129, %fd127, %fd100, %fd128;
	mov.f64 	%fd130, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd131, %fd129, %fd100, %fd130;
	mov.f64 	%fd132, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd133, %fd131, %fd100, %fd132;
	mov.f64 	%fd134, 0d3FC99999999840D2;
	fma.rn.f64 	%fd135, %fd133, %fd100, %fd134;
	mov.f64 	%fd136, 0dBFD555555555544C;
	fma.rn.f64 	%fd137, %fd135, %fd100, %fd136;
	mul.f64 	%fd138, %fd100, %fd137;
	fma.rn.f64 	%fd139, %fd138, %fd507, %fd507;
	mov.f64 	%fd140, 0d3FF921FB54442D18;
	sub.f64 	%fd141, %fd140, %fd139;
	setp.gt.f64 	%p9, %fd6, 0d3FF0000000000000;
	selp.f64 	%fd142, %fd141, %fd139, %p9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd142;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd142;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd5;
	}
	and.b32  	%r51, %r50, -2147483648;
	or.b32  	%r52, %r49, %r51;
	mov.b64 	%fd9, {%r48, %r52};
	shl.b64 	%rd49, %rd1, 3;
	add.s64 	%rd3, %rd46, %rd49;
	mov.f64 	%fd509, 0d7FFFFFFFE0000000;
	mov.f64 	%fd508, %fd509;
	@%p2 bra 	$L__BB0_8;

	ld.global.f64 	%fd508, [%rd3];

$L__BB0_8:
	@%p2 bra 	$L__BB0_10;

	ld.global.f64 	%fd509, [%rd3];

$L__BB0_10:
	abs.f64 	%fd145, %fd509;
	setp.gtu.f64 	%p11, %fd145, 0d7FF0000000000000;
	or.pred  	%p13, %p2, %p11;
	selp.f64 	%fd14, 0d0000000000000000, %fd508, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r54, %temp}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r55}, %fd14;
	}
	and.b32  	%r56, %r55, 2147483647;
	setp.eq.s32 	%p14, %r56, 2146435072;
	setp.eq.s32 	%p15, %r54, 0;
	mov.f64 	%fd512, 0dFFF8000000000000;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	$L__BB0_30;

	add.u64 	%rd4, %SPL, 0;
	abs.f64 	%fd146, %fd14;
	setp.gt.f64 	%p17, %fd146, 0d41E0000000000000;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;

$L__BB0_13:
	mov.b64 	%rd5, %fd14;
	and.b64  	%rd6, %rd5, -9223372036854775808;
	shr.u64 	%rd7, %rd5, 52;
	cvt.u32.u64 	%r58, %rd7;
	and.b32  	%r59, %r58, 2047;
	add.s32 	%r3, %r59, -1024;
	shr.u32 	%r60, %r3, 6;
	mov.u32 	%r61, 16;
	sub.s32 	%r62, %r61, %r60;
	mov.u32 	%r63, 15;
	sub.s32 	%r4, %r63, %r60;
	mov.u32 	%r64, 19;
	sub.s32 	%r65, %r64, %r60;
	min.s32 	%r5, %r65, 18;
	setp.gt.s32 	%p18, %r62, %r5;
	mov.u64 	%rd120, 0;
	mov.u32 	%r140, %r4;
	@%p18 bra 	$L__BB0_16;

	shl.b64 	%rd53, %rd5, 11;
	or.b64  	%rd8, %rd53, -9223372036854775808;
	add.s32 	%r66, %r4, -15;
	mul.wide.s32 	%rd54, %r66, 8;
	mov.u64 	%rd55, __internal_i2opi_d;
	add.s64 	%rd56, %rd55, %rd54;
	add.s64 	%rd118, %rd56, 120;
	mov.u64 	%rd117, %rd4;
	mov.u32 	%r140, %r4;

$L__BB0_15:
	.pragma "nounroll";
	ld.const.u64 	%rd57, [%rd118];
	mul.lo.s64 	%rd58, %rd57, %rd8;
	mul.hi.u64 	%rd59, %rd57, %rd8;
	add.s64 	%rd60, %rd58, %rd120;
	setp.lt.u64 	%p19, %rd60, %rd58;
	selp.u64 	%rd61, 1, 0, %p19;
	add.s64 	%rd120, %rd59, %rd61;
	st.local.u64 	[%rd117], %rd60;
	add.s64 	%rd118, %rd118, 8;
	add.s64 	%rd117, %rd117, 8;
	add.s32 	%r140, %r140, 1;
	setp.lt.s32 	%p20, %r140, %r5;
	@%p20 bra 	$L__BB0_15;

$L__BB0_16:
	sub.s32 	%r67, %r140, %r4;
	mul.wide.s32 	%rd62, %r67, 8;
	add.s64 	%rd63, %rd4, %rd62;
	st.local.u64 	[%rd63], %rd120;
	ld.local.u64 	%rd121, [%rd4+24];
	ld.local.u64 	%rd122, [%rd4+16];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32 	%p21, %r9, 0;
	@%p21 bra 	$L__BB0_18;

	neg.s64 	%rd64, %rd7;
	shl.b64 	%rd65, %rd121, %r9;
	cvt.u32.u64 	%r68, %rd64;
	and.b32  	%r69, %r68, 63;
	shr.u64 	%rd66, %rd122, %r69;
	or.b64  	%rd121, %rd66, %rd65;
	shl.b64 	%rd67, %rd122, %r9;
	ld.local.u64 	%rd68, [%rd4+8];
	shr.u64 	%rd69, %rd68, %r69;
	or.b64  	%rd122, %rd69, %rd67;

$L__BB0_18:
	shr.u64 	%rd70, %rd121, 62;
	cvt.u32.u64 	%r70, %rd70;
	shr.u64 	%rd71, %rd122, 62;
	shl.b64 	%rd72, %rd121, 2;
	or.b64  	%rd128, %rd71, %rd72;
	shl.b64 	%rd126, %rd122, 2;
	setp.ne.s64 	%p22, %rd126, 0;
	selp.u64 	%rd73, 1, 0, %p22;
	or.b64  	%rd74, %rd128, %rd73;
	setp.lt.u64 	%p23, %rd74, -9223372036854775807;
	setp.gt.u64 	%p24, %rd74, -9223372036854775808;
	selp.u32 	%r71, 1, 0, %p24;
	add.s32 	%r10, %r71, %r70;
	mov.u64 	%rd125, %rd6;
	@%p23 bra 	$L__BB0_20;

	not.b64 	%rd75, %rd128;
	neg.s64 	%rd26, %rd126;
	setp.eq.s64 	%p25, %rd126, 0;
	selp.u64 	%rd76, 1, 0, %p25;
	add.s64 	%rd128, %rd76, %rd75;
	xor.b64  	%rd125, %rd6, -9223372036854775808;
	mov.u64 	%rd126, %rd26;

$L__BB0_20:
	setp.lt.s64 	%p26, %rd128, 1;
	setp.eq.s64 	%p27, %rd6, 0;
	neg.s32 	%r73, %r10;
	mov.u32 	%r142, 0;
	selp.b32 	%r144, %r10, %r73, %p27;
	@%p26 bra 	$L__BB0_23;

$L__BB0_22:
	shr.u64 	%rd77, %rd126, 63;
	shl.b64 	%rd78, %rd128, 1;
	or.b64  	%rd128, %rd77, %rd78;
	shl.b64 	%rd126, %rd126, 1;
	add.s32 	%r142, %r142, -1;
	setp.gt.s64 	%p28, %rd128, 0;
	@%p28 bra 	$L__BB0_22;

$L__BB0_23:
	mul.lo.s64 	%rd130, %rd128, -3958705157555305931;
	mov.u64 	%rd79, -3958705157555305931;
	mul.hi.u64 	%rd129, %rd128, %rd79;
	setp.lt.s64 	%p29, %rd129, 1;
	@%p29 bra 	$L__BB0_25;

	shl.b64 	%rd80, %rd129, 1;
	shr.u64 	%rd81, %rd130, 63;
	or.b64  	%rd129, %rd80, %rd81;
	mul.lo.s64 	%rd130, %rd128, -7917410315110611862;
	add.s32 	%r142, %r142, -1;

$L__BB0_25:
	setp.ne.s64 	%p30, %rd130, 0;
	selp.u64 	%rd82, 1, 0, %p30;
	add.s64 	%rd83, %rd129, %rd82;
	add.s32 	%r75, %r142, 1022;
	cvt.u64.u32 	%rd84, %r75;
	shl.b64 	%rd85, %rd84, 52;
	shr.u64 	%rd86, %rd83, 11;
	add.s64 	%rd87, %rd85, %rd86;
	and.b64  	%rd88, %rd83, 1024;
	shr.u64 	%rd89, %rd88, 10;
	add.s64 	%rd90, %rd87, %rd89;
	or.b64  	%rd91, %rd90, %rd125;
	mov.b64 	%fd510, %rd91;
	bra.uni 	$L__BB0_26;

$L__BB0_12:
	mov.f64 	%fd160, 0d3FE45F306DC9C883;
	mul.rn.f64 	%fd147, %fd14, %fd160;
	// begin inline asm
	cvt.rni.s32.f64 	%r144, %fd147;
	// end inline asm
	cvt.rn.f64.s32 	%fd161, %r144;
	neg.f64 	%fd157, %fd161;
	mov.f64 	%fd150, 0d3FF921FB54442D18;
	// begin inline asm
	fma.rn.f64 	%fd148, %fd157, %fd150, %fd14;
	// end inline asm
	mov.f64 	%fd154, 0d3C91A62633145C00;
	// begin inline asm
	fma.rn.f64 	%fd152, %fd157, %fd154, %fd148;
	// end inline asm
	mov.f64 	%fd158, 0d397B839A252049C0;
	// begin inline asm
	fma.rn.f64 	%fd510, %fd157, %fd158, %fd152;
	// end inline asm

$L__BB0_26:
	add.s32 	%r18, %r144, 1;
	and.b32  	%r76, %r18, 1;
	setp.eq.b32 	%p31, %r76, 1;
	mov.pred 	%p32, 0;
	xor.pred  	%p33, %p31, %p32;
	not.pred 	%p34, %p33;
	mul.rn.f64 	%fd18, %fd510, %fd510;
	@%p34 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_27;

$L__BB0_28:
	mov.f64 	%fd191, 0d3DE5D8FD1FCF0EC1;
	mov.f64 	%fd193, 0dBE5AE5E5A9291691;
	// begin inline asm
	fma.rn.f64 	%fd190, %fd191, %fd18, %fd193;
	// end inline asm
	mov.f64 	%fd197, 0d3EC71DE3567D4896;
	// begin inline asm
	fma.rn.f64 	%fd194, %fd190, %fd18, %fd197;
	// end inline asm
	mov.f64 	%fd201, 0dBF2A01A019BFDF03;
	// begin inline asm
	fma.rn.f64 	%fd198, %fd194, %fd18, %fd201;
	// end inline asm
	mov.f64 	%fd205, 0d3F8111111110F7D0;
	// begin inline asm
	fma.rn.f64 	%fd202, %fd198, %fd18, %fd205;
	// end inline asm
	mov.f64 	%fd209, 0dBFC5555555555548;
	// begin inline asm
	fma.rn.f64 	%fd206, %fd202, %fd18, %fd209;
	// end inline asm
	mul.rn.f64 	%fd211, %fd206, %fd18;
	// begin inline asm
	fma.rn.f64 	%fd511, %fd211, %fd510, %fd510;
	// end inline asm
	bra.uni 	$L__BB0_29;

$L__BB0_27:
	mov.f64 	%fd163, 0dBDA8FF8D5A8F03DB;
	mov.f64 	%fd165, 0d3E21EEA7D67FAD92;
	// begin inline asm
	fma.rn.f64 	%fd162, %fd163, %fd18, %fd165;
	// end inline asm
	mov.f64 	%fd169, 0dBE927E4F8E26B8E3;
	// begin inline asm
	fma.rn.f64 	%fd166, %fd162, %fd18, %fd169;
	// end inline asm
	mov.f64 	%fd173, 0d3EFA01A019DDEC33;
	// begin inline asm
	fma.rn.f64 	%fd170, %fd166, %fd18, %fd173;
	// end inline asm
	mov.f64 	%fd177, 0dBF56C16C16C15D69;
	// begin inline asm
	fma.rn.f64 	%fd174, %fd170, %fd18, %fd177;
	// end inline asm
	mov.f64 	%fd181, 0d3FA5555555555551;
	// begin inline asm
	fma.rn.f64 	%fd178, %fd174, %fd18, %fd181;
	// end inline asm
	mov.f64 	%fd185, 0dBFE0000000000000;
	// begin inline asm
	fma.rn.f64 	%fd182, %fd178, %fd18, %fd185;
	// end inline asm
	mov.f64 	%fd189, 0d3FF0000000000000;
	// begin inline asm
	fma.rn.f64 	%fd511, %fd182, %fd18, %fd189;
	// end inline asm

$L__BB0_29:
	and.b32  	%r77, %r18, 2;
	setp.eq.s32 	%p35, %r77, 0;
	neg.f64 	%fd214, %fd511;
	selp.f64 	%fd512, %fd511, %fd214, %p35;

$L__BB0_30:
	add.f64 	%fd24, %fd512, 0d0000000000000000;
	add.s64 	%rd43, %rd45, %rd49;
	mov.f64 	%fd514, 0d7FFFFFFFE0000000;
	mul.f64 	%fd513, %fd514, 0d3FD45F306DC9C883;
	@%p2 bra 	$L__BB0_32;

	ld.global.f64 	%fd217, [%rd43];
	mul.f64 	%fd513, %fd217, 0d3FD45F306DC9C883;

$L__BB0_32:
	@%p2 bra 	$L__BB0_34;

	ld.global.f64 	%fd514, [%rd43];

$L__BB0_34:
	abs.f64 	%fd219, %fd514;
	setp.gtu.f64 	%p38, %fd219, 0d7FF0000000000000;
	or.pred  	%p40, %p2, %p38;
	selp.f64 	%fd29, 0d0000000000000000, %fd513, %p40;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r80, %temp}, %fd29;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd29;
	}
	add.s32 	%r81, %r19, 1048576;
	mov.b64 	%fd220, {%r80, %r81};
	cvt.rni.f64.f64 	%fd221, %fd220;
	cvt.rzi.s64.f64 	%rd93, %fd221;
	cvt.u32.u64 	%r145, %rd93;
	neg.f64 	%fd222, %fd221;
	mov.f64 	%fd223, 0d3FE0000000000000;
	fma.rn.f64 	%fd224, %fd222, %fd223, %fd29;
	mul.f64 	%fd225, %fd224, 0d3CA1A62633145C07;
	mov.f64 	%fd226, 0d400921FB54442D18;
	fma.rn.f64 	%fd519, %fd224, %fd226, %fd225;
	and.b32  	%r82, %r145, 1;
	shl.b32 	%r83, %r145, 3;
	and.b32  	%r84, %r83, 8;
	mul.rn.f64 	%fd518, %fd519, %fd519;
	setp.eq.s32 	%p41, %r82, 0;
	selp.f64 	%fd227, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p41;
	mul.wide.s32 	%rd94, %r84, 8;
	mov.u64 	%rd95, __cudart_sin_cos_coeffs;
	add.s64 	%rd96, %rd95, %rd94;
	ld.global.nc.f64 	%fd228, [%rd96+8];
	fma.rn.f64 	%fd229, %fd227, %fd518, %fd228;
	ld.global.nc.f64 	%fd230, [%rd96+16];
	fma.rn.f64 	%fd231, %fd229, %fd518, %fd230;
	ld.global.nc.f64 	%fd232, [%rd96+24];
	fma.rn.f64 	%fd233, %fd231, %fd518, %fd232;
	ld.global.nc.f64 	%fd234, [%rd96+32];
	fma.rn.f64 	%fd235, %fd233, %fd518, %fd234;
	ld.global.nc.f64 	%fd236, [%rd96+40];
	fma.rn.f64 	%fd237, %fd235, %fd518, %fd236;
	ld.global.nc.f64 	%fd238, [%rd96+48];
	fma.rn.f64 	%fd32, %fd237, %fd518, %fd238;
	fma.rn.f64 	%fd516, %fd32, %fd519, %fd519;
	@%p41 bra 	$L__BB0_36;

	mov.f64 	%fd239, 0d3FF0000000000000;
	fma.rn.f64 	%fd516, %fd32, %fd518, %fd239;

$L__BB0_36:
	and.b32  	%r85, %r145, 2;
	setp.eq.s32 	%p42, %r85, 0;
	@%p42 bra 	$L__BB0_38;

	mov.f64 	%fd240, 0d0000000000000000;
	mov.f64 	%fd241, 0dBFF0000000000000;
	fma.rn.f64 	%fd516, %fd516, %fd241, %fd240;

$L__BB0_38:
	cvt.rzi.f64.f64 	%fd242, %fd29;
	setp.neu.f64 	%p43, %fd242, %fd29;
	@%p43 bra 	$L__BB0_40;

	mov.f64 	%fd243, 0d0000000000000000;
	mul.rn.f64 	%fd516, %fd29, %fd243;

$L__BB0_40:
	shl.b32 	%r86, %r19, 1;
	setp.lt.u32 	%p44, %r86, -2038431743;
	@%p44 bra 	$L__BB0_42;

	mov.f64 	%fd244, 0d0000000000000000;
	mul.rn.f64 	%fd245, %fd29, %fd244;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r87, %temp}, %fd245;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r88}, %fd245;
	}
	add.s32 	%r89, %r88, 1048576;
	mov.b64 	%fd246, {%r87, %r89};
	cvt.rni.f64.f64 	%fd247, %fd246;
	cvt.rzi.s64.f64 	%rd97, %fd247;
	cvt.u32.u64 	%r145, %rd97;
	neg.f64 	%fd248, %fd247;
	mov.f64 	%fd249, 0d3FE0000000000000;
	fma.rn.f64 	%fd250, %fd248, %fd249, %fd245;
	mul.f64 	%fd251, %fd250, 0d3CA1A62633145C07;
	mov.f64 	%fd252, 0d400921FB54442D18;
	fma.rn.f64 	%fd519, %fd250, %fd252, %fd251;
	mul.rn.f64 	%fd518, %fd519, %fd519;

$L__BB0_42:
	add.s32 	%r23, %r145, 1;
	and.b32  	%r90, %r23, 1;
	shl.b32 	%r91, %r23, 3;
	and.b32  	%r92, %r91, 8;
	setp.eq.s32 	%p45, %r90, 0;
	selp.f64 	%fd253, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p45;
	mul.wide.s32 	%rd98, %r92, 8;
	add.s64 	%rd100, %rd95, %rd98;
	ld.global.nc.f64 	%fd254, [%rd100+8];
	fma.rn.f64 	%fd255, %fd253, %fd518, %fd254;
	ld.global.nc.f64 	%fd256, [%rd100+16];
	fma.rn.f64 	%fd257, %fd255, %fd518, %fd256;
	ld.global.nc.f64 	%fd258, [%rd100+24];
	fma.rn.f64 	%fd259, %fd257, %fd518, %fd258;
	ld.global.nc.f64 	%fd260, [%rd100+32];
	fma.rn.f64 	%fd261, %fd259, %fd518, %fd260;
	ld.global.nc.f64 	%fd262, [%rd100+40];
	fma.rn.f64 	%fd263, %fd261, %fd518, %fd262;
	ld.global.nc.f64 	%fd264, [%rd100+48];
	fma.rn.f64 	%fd44, %fd263, %fd518, %fd264;
	fma.rn.f64 	%fd521, %fd44, %fd519, %fd519;
	@%p45 bra 	$L__BB0_44;

	mov.f64 	%fd265, 0d3FF0000000000000;
	fma.rn.f64 	%fd521, %fd44, %fd518, %fd265;

$L__BB0_44:
	and.b32  	%r93, %r23, 2;
	setp.eq.s32 	%p46, %r93, 0;
	@%p46 bra 	$L__BB0_46;

	mov.f64 	%fd266, 0d0000000000000000;
	mov.f64 	%fd267, 0dBFF0000000000000;
	fma.rn.f64 	%fd521, %fd521, %fd267, %fd266;

$L__BB0_46:
	setp.eq.f64 	%p47, %fd521, 0d3FF0000000000000;
	mov.f64 	%fd525, 0d3FF0000000000000;
	@%p47 bra 	$L__BB0_72;

	abs.f64 	%fd50, %fd521;
	setp.gtu.f64 	%p48, %fd50, 0d7FF0000000000000;
	@%p48 bra 	$L__BB0_71;
	bra.uni 	$L__BB0_48;

$L__BB0_71:
	add.f64 	%fd525, %fd521, 0dBFF0000000000000;
	bra.uni 	$L__BB0_72;

$L__BB0_48:
	setp.eq.f64 	%p49, %fd521, 0d7FF0000000000000;
	@%p49 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_49;

$L__BB0_70:
	mov.f64 	%fd461, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r126}, %fd461;
	}
	setp.gt.s32 	%p72, %r126, -1;
	selp.f64 	%fd525, 0d7FF0000000000000, 0d0000000000000000, %p72;

$L__BB0_72:
	mul.f64 	%fd69, %fd516, %fd525;
	setp.lt.f64 	%p73, %fd69, 0d0000000000000000;
	setp.gt.f64 	%p74, %fd24, 0d0000000000000000;
	and.pred  	%p75, %p74, %p73;
	@%p75 bra 	$L__BB0_74;

	setp.geu.f64 	%p76, %fd24, 0d0000000000000000;
	setp.leu.f64 	%p77, %fd69, 0d0000000000000000;
	or.pred  	%p78, %p76, %p77;
	@%p78 bra 	$L__BB0_83;

$L__BB0_74:
	neg.f64 	%fd70, %fd24;
	setp.eq.f64 	%p79, %fd69, %fd70;
	mov.f64 	%fd526, 0d0000000000000000;
	@%p79 bra 	$L__BB0_84;

	setp.eq.f64 	%p80, %fd69, 0d0000000000000000;
	setp.eq.f64 	%p81, %fd24, 0d8000000000000000;
	or.pred  	%p82, %p81, %p80;
	@%p82 bra 	$L__BB0_83;

	add.f64 	%fd463, %fd24, %fd69;
	abs.f64 	%fd71, %fd463;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r127}, %fd71;
	}
	and.b32  	%r128, %r127, 2146435072;
	setp.eq.s32 	%p83, %r128, 2146435072;
	@%p83 bra 	$L__BB0_83;

	abs.f64 	%fd72, %fd69;
	mul.f64 	%fd464, %fd72, 0d3D30000000000000;
	setp.gt.f64 	%p84, %fd71, %fd464;
	@%p84 bra 	$L__BB0_83;

	abs.f64 	%fd73, %fd70;
	mul.f64 	%fd465, %fd73, 0d3D30000000000000;
	setp.gt.f64 	%p85, %fd71, %fd465;
	@%p85 bra 	$L__BB0_83;

	setp.gtu.f64 	%p86, %fd71, 0d001FFFFFFFFFFFFF;
	mov.b64 	%rd103, %fd71;
	setp.gt.s64 	%p87, %rd103, 9007199254740991;
	or.pred  	%p88, %p86, %p87;
	@%p88 bra 	$L__BB0_82;

	setp.gtu.f64 	%p89, %fd72, 0d001FFFFFFFFFFFFF;
	mov.b64 	%rd104, %fd72;
	setp.gt.s64 	%p90, %rd104, 9007199254740991;
	or.pred  	%p91, %p89, %p90;
	@%p91 bra 	$L__BB0_82;

	setp.le.f64 	%p92, %fd73, 0d001FFFFFFFFFFFFF;
	mov.b64 	%rd105, %fd73;
	setp.lt.s64 	%p93, %rd105, 9007199254740992;
	and.pred  	%p94, %p92, %p93;
	@%p94 bra 	$L__BB0_83;

$L__BB0_82:
	mul.f64 	%fd467, %fd72, 0d3CF0000000000000;
	setp.lt.f64 	%p95, %fd71, %fd467;
	mul.f64 	%fd468, %fd73, 0d3CF0000000000000;
	setp.lt.f64 	%p96, %fd71, %fd468;
	and.pred  	%p97, %p95, %p96;
	@%p97 bra 	$L__BB0_84;

$L__BB0_83:
	add.f64 	%fd469, %fd24, %fd69;
	mul.f64 	%fd526, %fd469, 0d3FD45F306DC9C883;

$L__BB0_84:
	mov.u64 	%rd115, __cudart_sin_cos_coeffs;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r129}, %fd526;
	}
	add.s32 	%r130, %r129, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r131, %temp}, %fd526;
	}
	mov.b64 	%fd470, {%r131, %r130};
	cvt.rni.f64.f64 	%fd471, %fd470;
	cvt.rzi.s64.f64 	%rd106, %fd471;
	cvt.u32.u64 	%r39, %rd106;
	neg.f64 	%fd472, %fd471;
	mov.f64 	%fd473, 0d3FE0000000000000;
	fma.rn.f64 	%fd474, %fd472, %fd473, %fd526;
	mul.f64 	%fd475, %fd474, 0d3CA1A62633145C07;
	mov.f64 	%fd476, 0d400921FB54442D18;
	fma.rn.f64 	%fd477, %fd474, %fd476, %fd475;
	and.b32  	%r132, %r39, 1;
	shl.b32 	%r133, %r39, 3;
	and.b32  	%r134, %r133, 8;
	mul.rn.f64 	%fd76, %fd477, %fd477;
	setp.eq.s32 	%p98, %r132, 0;
	selp.f64 	%fd478, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p98;
	mul.wide.s32 	%rd107, %r134, 8;
	add.s64 	%rd109, %rd115, %rd107;
	ld.global.nc.f64 	%fd479, [%rd109+8];
	fma.rn.f64 	%fd480, %fd478, %fd76, %fd479;
	ld.global.nc.f64 	%fd481, [%rd109+16];
	fma.rn.f64 	%fd482, %fd480, %fd76, %fd481;
	ld.global.nc.f64 	%fd483, [%rd109+24];
	fma.rn.f64 	%fd484, %fd482, %fd76, %fd483;
	ld.global.nc.f64 	%fd485, [%rd109+32];
	fma.rn.f64 	%fd486, %fd484, %fd76, %fd485;
	ld.global.nc.f64 	%fd487, [%rd109+40];
	fma.rn.f64 	%fd488, %fd486, %fd76, %fd487;
	ld.global.nc.f64 	%fd489, [%rd109+48];
	fma.rn.f64 	%fd77, %fd488, %fd76, %fd489;
	fma.rn.f64 	%fd528, %fd77, %fd477, %fd477;
	@%p98 bra 	$L__BB0_86;

	mov.f64 	%fd490, 0d3FF0000000000000;
	fma.rn.f64 	%fd528, %fd77, %fd76, %fd490;

$L__BB0_86:
	and.b32  	%r135, %r39, 2;
	setp.eq.s32 	%p99, %r135, 0;
	@%p99 bra 	$L__BB0_88;

	mov.f64 	%fd491, 0d0000000000000000;
	mov.f64 	%fd492, 0dBFF0000000000000;
	fma.rn.f64 	%fd528, %fd528, %fd492, %fd491;

$L__BB0_88:
	cvt.rzi.f64.f64 	%fd493, %fd526;
	setp.neu.f64 	%p100, %fd493, %fd526;
	@%p100 bra 	$L__BB0_90;

	mov.f64 	%fd494, 0d0000000000000000;
	mul.rn.f64 	%fd528, %fd526, %fd494;

$L__BB0_90:
	setp.lt.f64 	%p101, %fd9, 0d0000000000000000;
	setp.lt.f64 	%p102, %fd528, 0d0000000000000000;
	and.pred  	%p103, %p101, %p102;
	@%p103 bra 	$L__BB0_92;

	setp.leu.f64 	%p104, %fd528, 0d0000000000000000;
	setp.leu.f64 	%p105, %fd9, 0d0000000000000000;
	or.pred  	%p106, %p105, %p104;
	@%p106 bra 	$L__BB0_101;

$L__BB0_92:
	setp.eq.f64 	%p107, %fd528, %fd9;
	mov.f64 	%fd530, 0d0000000000000000;
	@%p107 bra 	$L__BB0_102;

	setp.eq.f64 	%p108, %fd528, 0d0000000000000000;
	setp.eq.f64 	%p109, %fd9, 0d0000000000000000;
	or.pred  	%p110, %p109, %p108;
	@%p110 bra 	$L__BB0_101;

	sub.f64 	%fd496, %fd528, %fd9;
	abs.f64 	%fd85, %fd496;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r136}, %fd85;
	}
	and.b32  	%r137, %r136, 2146435072;
	setp.eq.s32 	%p111, %r137, 2146435072;
	@%p111 bra 	$L__BB0_101;

	abs.f64 	%fd86, %fd528;
	mul.f64 	%fd497, %fd86, 0d3D30000000000000;
	setp.gt.f64 	%p112, %fd85, %fd497;
	@%p112 bra 	$L__BB0_101;

	abs.f64 	%fd87, %fd9;
	mul.f64 	%fd498, %fd87, 0d3D30000000000000;
	setp.gt.f64 	%p113, %fd85, %fd498;
	@%p113 bra 	$L__BB0_101;

	setp.gtu.f64 	%p114, %fd85, 0d001FFFFFFFFFFFFF;
	mov.b64 	%rd110, %fd85;
	setp.gt.s64 	%p115, %rd110, 9007199254740991;
	or.pred  	%p116, %p114, %p115;
	@%p116 bra 	$L__BB0_100;

	setp.gtu.f64 	%p117, %fd86, 0d001FFFFFFFFFFFFF;
	mov.b64 	%rd111, %fd86;
	setp.gt.s64 	%p118, %rd111, 9007199254740991;
	or.pred  	%p119, %p117, %p118;
	@%p119 bra 	$L__BB0_100;

	setp.le.f64 	%p120, %fd87, 0d001FFFFFFFFFFFFF;
	mov.b64 	%rd112, %fd87;
	setp.lt.s64 	%p121, %rd112, 9007199254740992;
	and.pred  	%p122, %p120, %p121;
	@%p122 bra 	$L__BB0_101;

$L__BB0_100:
	mul.f64 	%fd500, %fd86, 0d3CF0000000000000;
	setp.lt.f64 	%p123, %fd85, %fd500;
	mul.f64 	%fd501, %fd87, 0d3CF0000000000000;
	setp.lt.f64 	%p124, %fd85, %fd501;
	and.pred  	%p125, %p123, %p124;
	@%p125 bra 	$L__BB0_102;

$L__BB0_101:
	sub.f64 	%fd530, %fd528, %fd9;

$L__BB0_102:
	ld.param.u64 	%rd116, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0];
	add.s64 	%rd114, %rd116, %rd49;
	st.global.f64 	[%rd114], %fd530;
	ret;

$L__BB0_49:
	mov.f64 	%fd269, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r94, %temp}, %fd269;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r95}, %fd269;
	}
	and.b32  	%r96, %r95, 2147483647;
	setp.ne.s32 	%p50, %r96, 2146435072;
	setp.ne.s32 	%p51, %r94, 0;
	or.pred  	%p52, %p51, %p50;
	@%p52 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_50;

$L__BB0_52:
	mov.f64 	%fd274, 0d3FE0000000000000;
	mul.rn.f64 	%fd275, %fd274, %fd269;
	cvt.rzi.f64.f64 	%fd276, %fd275;
	mov.f64 	%fd277, 0d4000000000000000;
	mul.rn.f64 	%fd278, %fd277, %fd276;
	sub.f64 	%fd279, %fd269, %fd278;
	abs.f64 	%fd52, %fd279;
	setp.eq.f64 	%p55, %fd521, 0d0000000000000000;
	@%p55 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_53;

$L__BB0_69:
	setp.eq.f64 	%p71, %fd52, 0d3FF0000000000000;
	rcp.rn.f64 	%fd458, %fd521;
	mov.f64 	%fd459, 0d0000000000000000;
	rcp.rn.f64 	%fd460, %fd459;
	selp.f64 	%fd525, %fd458, %fd460, %p71;
	bra.uni 	$L__BB0_72;

$L__BB0_50:
	setp.eq.f64 	%p53, %fd521, 0dBFF0000000000000;
	@%p53 bra 	$L__BB0_72;

	setp.gt.f64 	%p54, %fd50, 0d3FF0000000000000;
	mov.f64 	%fd271, 0d0000000000000000;
	rcp.rn.f64 	%fd272, %fd271;
	selp.f64 	%fd525, 0d0000000000000000, %fd272, %p54;
	bra.uni 	$L__BB0_72;

$L__BB0_53:
	setp.eq.f64 	%p56, %fd521, 0dFFF0000000000000;
	@%p56 bra 	$L__BB0_67;
	bra.uni 	$L__BB0_54;

$L__BB0_67:
	setp.neu.f64 	%p70, %fd52, 0d3FF0000000000000;
	mov.f64 	%fd525, 0d0000000000000000;
	@%p70 bra 	$L__BB0_72;

	mov.f64 	%fd525, 0d8000000000000000;
	bra.uni 	$L__BB0_72;

$L__BB0_54:
	setp.geu.f64 	%p57, %fd521, 0d0000000000000000;
	@%p57 bra 	$L__BB0_56;

	mov.f64 	%fd281, 0dBFF0000000000000;
	cvt.rzi.f64.f64 	%fd282, %fd281;
	setp.neu.f64 	%p58, %fd282, 0dBFF0000000000000;
	mov.f64 	%fd525, 0dFFF8000000000000;
	@%p58 bra 	$L__BB0_72;

$L__BB0_56:
	// begin inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r147}, %fd50; 
	}
	// end inline asm
	// begin inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r146, hi}, %fd50; 
	}
	// end inline asm
	shr.u32 	%r99, %r147, 20;
	and.b32  	%r148, %r99, 2047;
	setp.ne.s32 	%p59, %r148, 0;
	@%p59 bra 	$L__BB0_58;

	mov.f64 	%fd287, 0d4350000000000000;
	mul.rn.f64 	%fd286, %fd50, %fd287;
	// begin inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r147}, %fd286; 
	}
	// end inline asm
	// begin inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r146, hi}, %fd286; 
	}
	// end inline asm
	shr.u32 	%r102, %r147, 20;
	and.b32  	%r103, %r102, 2047;
	add.s32 	%r148, %r103, -54;

$L__BB0_58:
	add.s32 	%r149, %r148, -1023;
	and.b32  	%r106, %r147, -2146435073;
	or.b32  	%r105, %r106, 1072693248;
	// begin inline asm
	mov.b64 	%fd522, {%r146, %r105};
	// end inline asm
	setp.lt.u32 	%p60, %r105, 1073127583;
	@%p60 bra 	$L__BB0_60;

	// begin inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r107, hi}, %fd522; 
	}
	// end inline asm
	// begin inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r108}, %fd522; 
	}
	// end inline asm
	add.s32 	%r110, %r108, -1048576;
	// begin inline asm
	mov.b64 	%fd522, {%r107, %r110};
	// end inline asm
	add.s32 	%r149, %r148, -1022;

$L__BB0_60:
	add.f64 	%fd376, %fd522, 0d3FF0000000000000;
	mov.f64 	%fd377, 0d3FF0000000000000;
	rcp.rn.f64 	%fd378, %fd376;
	add.f64 	%fd318, %fd522, 0dBFF0000000000000;
	mov.f64 	%fd374, 0dBFF0000000000000;
	mul.rn.f64 	%fd379, %fd318, %fd378;
	add.f64 	%fd366, %fd379, %fd379;
	mul.rn.f64 	%fd314, %fd366, %fd366;
	mov.f64 	%fd293, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd295, 0d3ED0F5D241AD3B5A;
	// begin inline asm
	fma.rn.f64 	%fd292, %fd293, %fd314, %fd295;
	// end inline asm
	mov.f64 	%fd299, 0d3EF3B20A75488A3F;
	// begin inline asm
	fma.rn.f64 	%fd296, %fd292, %fd314, %fd299;
	// end inline asm
	mov.f64 	%fd303, 0d3F1745CDE4FAECD5;
	// begin inline asm
	fma.rn.f64 	%fd300, %fd296, %fd314, %fd303;
	// end inline asm
	mov.f64 	%fd307, 0d3F3C71C7258A578B;
	// begin inline asm
	fma.rn.f64 	%fd304, %fd300, %fd314, %fd307;
	// end inline asm
	mov.f64 	%fd311, 0d3F6249249242B910;
	// begin inline asm
	fma.rn.f64 	%fd308, %fd304, %fd314, %fd311;
	// end inline asm
	mov.f64 	%fd315, 0d3F89999999999DFB;
	// begin inline asm
	fma.rn.f64 	%fd312, %fd308, %fd314, %fd315;
	// end inline asm
	mul.rn.f64 	%fd380, %fd312, %fd314;
	sub.f64 	%fd381, %fd318, %fd366;
	mov.f64 	%fd382, 0d4000000000000000;
	mul.rn.f64 	%fd319, %fd382, %fd381;
	neg.f64 	%fd317, %fd366;
	// begin inline asm
	fma.rn.f64 	%fd316, %fd317, %fd318, %fd319;
	// end inline asm
	mul.rn.f64 	%fd362, %fd378, %fd316;
	add.f64 	%fd383, %fd380, 0d3FB5555555555555;
	mov.f64 	%fd384, 0d3FB5555555555555;
	sub.f64 	%fd385, %fd384, %fd383;
	add.f64 	%fd386, %fd380, %fd385;
	add.f64 	%fd387, %fd386, 0d0000000000000000;
	add.f64 	%fd388, %fd387, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd329, %fd383, %fd388;
	sub.f64 	%fd389, %fd383, %fd329;
	add.f64 	%fd333, %fd388, %fd389;
	mul.rn.f64 	%fd390, %fd329, %fd366;
	neg.f64 	%fd323, %fd390;
	// begin inline asm
	fma.rn.f64 	%fd320, %fd329, %fd366, %fd323;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd324, %fd333, %fd362, %fd320;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd328, %fd329, %fd362, %fd324;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd332, %fd333, %fd366, %fd328;
	// end inline asm
	add.f64 	%fd345, %fd390, %fd332;
	sub.f64 	%fd391, %fd390, %fd345;
	add.f64 	%fd349, %fd332, %fd391;
	mul.rn.f64 	%fd392, %fd345, %fd366;
	neg.f64 	%fd339, %fd392;
	// begin inline asm
	fma.rn.f64 	%fd336, %fd345, %fd366, %fd339;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd340, %fd349, %fd362, %fd336;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd344, %fd345, %fd362, %fd340;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd348, %fd349, %fd366, %fd344;
	// end inline asm
	add.f64 	%fd361, %fd392, %fd348;
	sub.f64 	%fd393, %fd392, %fd361;
	add.f64 	%fd365, %fd348, %fd393;
	mul.rn.f64 	%fd394, %fd361, %fd366;
	neg.f64 	%fd355, %fd394;
	// begin inline asm
	fma.rn.f64 	%fd352, %fd361, %fd366, %fd355;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd356, %fd365, %fd362, %fd352;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd360, %fd361, %fd362, %fd356;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd364, %fd365, %fd366, %fd360;
	// end inline asm
	add.f64 	%fd395, %fd394, %fd364;
	sub.f64 	%fd396, %fd394, %fd395;
	add.f64 	%fd397, %fd364, %fd396;
	add.f64 	%fd398, %fd366, %fd395;
	sub.f64 	%fd399, %fd366, %fd398;
	add.f64 	%fd400, %fd395, %fd399;
	add.f64 	%fd401, %fd397, %fd400;
	add.f64 	%fd402, %fd362, %fd401;
	add.f64 	%fd403, %fd398, %fd402;
	sub.f64 	%fd404, %fd398, %fd403;
	add.f64 	%fd405, %fd402, %fd404;
	cvt.rn.f64.s32 	%fd406, %r149;
	mov.f64 	%fd407, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd408, %fd406, %fd407;
	mov.f64 	%fd409, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd410, %fd406, %fd409;
	add.f64 	%fd411, %fd408, %fd403;
	sub.f64 	%fd412, %fd408, %fd411;
	add.f64 	%fd413, %fd403, %fd412;
	add.f64 	%fd414, %fd405, %fd413;
	add.f64 	%fd415, %fd410, %fd414;
	add.f64 	%fd369, %fd411, %fd415;
	sub.f64 	%fd416, %fd411, %fd369;
	add.f64 	%fd373, %fd415, %fd416;
	mul.rn.f64 	%fd417, %fd369, %fd374;
	neg.f64 	%fd371, %fd417;
	// begin inline asm
	fma.rn.f64 	%fd368, %fd369, %fd374, %fd371;
	// end inline asm
	// begin inline asm
	fma.rn.f64 	%fd372, %fd373, %fd374, %fd368;
	// end inline asm
	add.f64 	%fd56, %fd417, %fd372;
	sub.f64 	%fd418, %fd417, %fd56;
	add.f64 	%fd57, %fd372, %fd418;
	mov.f64 	%fd419, 0d4338000000000000;
	mov.f64 	%fd420, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd421, %fd56, %fd420, %fd419;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd421;
	}
	mov.f64 	%fd422, 0dC338000000000000;
	add.rn.f64 	%fd423, %fd421, %fd422;
	mov.f64 	%fd424, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd425, %fd423, %fd424, %fd56;
	mov.f64 	%fd426, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd427, %fd423, %fd426, %fd425;
	mov.f64 	%fd428, 0d3E928AF3FCA213EA;
	mov.f64 	%fd429, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd430, %fd429, %fd427, %fd428;
	mov.f64 	%fd431, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd432, %fd430, %fd427, %fd431;
	mov.f64 	%fd433, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd434, %fd432, %fd427, %fd433;
	mov.f64 	%fd435, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd436, %fd434, %fd427, %fd435;
	mov.f64 	%fd437, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd438, %fd436, %fd427, %fd437;
	mov.f64 	%fd439, 0d3F81111111122322;
	fma.rn.f64 	%fd440, %fd438, %fd427, %fd439;
	mov.f64 	%fd441, 0d3FA55555555502A1;
	fma.rn.f64 	%fd442, %fd440, %fd427, %fd441;
	mov.f64 	%fd443, 0d3FC5555555555511;
	fma.rn.f64 	%fd444, %fd442, %fd427, %fd443;
	mov.f64 	%fd445, 0d3FE000000000000B;
	fma.rn.f64 	%fd446, %fd444, %fd427, %fd445;
	fma.rn.f64 	%fd447, %fd446, %fd427, %fd377;
	fma.rn.f64 	%fd448, %fd447, %fd427, %fd377;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r37, %temp}, %fd448;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r38}, %fd448;
	}
	shl.b32 	%r111, %r36, 20;
	add.s32 	%r112, %r38, %r111;
	mov.b64 	%fd525, {%r37, %r112};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r113}, %fd56;
	}
	mov.b32 	%f2, %r113;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p61, %f1, 0f4086232B;
	@%p61 bra 	$L__BB0_63;

	setp.lt.f64 	%p62, %fd56, 0d0000000000000000;
	add.f64 	%fd449, %fd56, 0d7FF0000000000000;
	selp.f64 	%fd525, 0d0000000000000000, %fd449, %p62;
	setp.geu.f32 	%p63, %f1, 0f40874800;
	@%p63 bra 	$L__BB0_63;

	mov.f64 	%fd504, 0d4338000000000000;
	mov.f64 	%fd503, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd502, %fd56, %fd503, %fd504;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r138, %temp}, %fd502;
	}
	shr.u32 	%r114, %r138, 31;
	add.s32 	%r115, %r138, %r114;
	shr.s32 	%r116, %r115, 1;
	shl.b32 	%r117, %r116, 20;
	add.s32 	%r118, %r38, %r117;
	mov.b64 	%fd450, {%r37, %r118};
	sub.s32 	%r119, %r138, %r116;
	shl.b32 	%r120, %r119, 20;
	add.s32 	%r121, %r120, 1072693248;
	mov.u32 	%r122, 0;
	mov.b64 	%fd451, {%r122, %r121};
	mul.f64 	%fd525, %fd450, %fd451;

$L__BB0_63:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r123}, %fd525;
	}
	and.b32  	%r124, %r123, 2147483647;
	setp.eq.s32 	%p64, %r124, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r125, %temp}, %fd525;
	}
	setp.eq.s32 	%p65, %r125, 0;
	and.pred  	%p66, %p65, %p64;
	@%p66 bra 	$L__BB0_65;

	// begin inline asm
	fma.rn.f64 	%fd525, %fd525, %fd57, %fd525;
	// end inline asm

$L__BB0_65:
	setp.neu.f64 	%p67, %fd52, 0d3FF0000000000000;
	or.pred  	%p69, %p57, %p67;
	@%p69 bra 	$L__BB0_72;

	mov.b64 	%rd101, %fd525;
	xor.b64  	%rd102, %rd101, -9223372036854775808;
	mov.b64 	%fd525, %rd102;
	bra.uni 	$L__BB0_72;

}

  